---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import Title from "@components/shared/Title.astro";
import {Icon} from 'astro-icon/components'

export const getStaticPaths = (async() => {
    const resp = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=151`);
    const {results} = await resp.json() as PokemonListResponse;

    return results.map(({name, url}) => (
            {params: {name}, props: {name, url}}
        ))
    
    
}) satisfies GetStaticPaths;

const {name} = Astro.params;
const {url} = Astro.props

const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const img = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;

---

<MainLayout  title={`Pokémon - #${id} ${name}`}
description={`Información sobre el pokémon ${name}`}
image={img}
>
    <section class="mt-10 mx-10 flex flex-col justify-center items-center">
        <div class="flex flex-row">

            <div>
                <button class="text-blue-500"
                onclick="history.back()"
                >Regresar</button>
                
            <Title>{name}</Title>
            </div>
    
            <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
                <Icon data-outline name="heart-outline" size={50}></Icon>
                <Icon data-full class="hidden" name="heart-full" size={50}></Icon>
            </button>
        </div>
        
        <PokemonCard name={name} url={url} isBig />
        <audio controls class="mt-5" >
            <source src={audioSrc} />
        </audio>
    </section>

</MainLayout>

<script>
import type { FavoritePokemon } from "@interfaces/favorite-pokemon";

   


    const handlePageLoad = () => {

        let favoritePokemons: FavoritePokemon[] = JSON.parse(
        localStorage.getItem('favorites') ?? '[]'
        );
        
        const btnFavorite = document.querySelector(`#btn-favorite`) as HTMLButtonElement;
        if(!btnFavorite) return;
        const name = btnFavorite.dataset.name ?? '';
        const id = btnFavorite.dataset.id ?? '';

        const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
        const heartFull = btnFavorite.querySelector('[data-full]') as HTMLElement;

        const isFavorite = favoritePokemons.some(fav => fav.name === name);
        

        const toggleFavorite = () => {
            const isFavorite = favoritePokemons.some(fav => fav.name === name);
            if (isFavorite) {

            favoritePokemons = favoritePokemons.filter((fav) => fav.name !== name);
            }else {
                favoritePokemons.push({
                    id: +id, name:name
                })
            }

            localStorage.setItem('favorites', JSON.stringify(favoritePokemons));
        }
        
        if(isFavorite){
            heartOutline.classList.toggle('hidden');
            heartFull.classList.toggle('hidden');

        }

        btnFavorite.addEventListener('click', () => {
            heartOutline.classList.toggle('hidden');
            heartFull.classList.toggle('hidden');

            toggleFavorite();
        })
    }

    document.addEventListener('astro:page-load', handlePageLoad) 

    

</script>

<style>
    #btn-favorite{
        @apply hover:animate-pulse
    }
</style>